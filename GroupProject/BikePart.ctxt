#BlueJ class context
comment0.target=BikePart
comment0.text=\r\n\ This\ is\ the\ class\ which\ defines\ the\ characteristics\ of\ BikePart\ objects.\r\n\r\n\ @author\ Abdel\ Hamid\ Shehata\r\n\ @version\ 9/11/2019\r\n
comment1.params=
comment1.target=BikePart()
comment1.text=\r\n\ Placeholder\ constructor\ for\ BikePart\ objects,\ sets\ all\ values\ to\ a\ default\r\n
comment10.params=
comment10.target=int\ getNumber()
comment10.text=\r\n\ Getter\ for\ the\ partNumber\ of\ a\ BikePart\r\n\ @return\ an\ integer,\ the\ part\ number\ of\ the\ part\r\n
comment11.params=number
comment11.target=void\ setNumber(int)
comment11.text=\r\n\ Setter\ for\ the\ partNumber\ of\ a\ BikePart,\ changes\ the\ partNumber\ to\ the\ given\ integer\r\n\ @param\ number\ the\ number\ we\ want\ to\ become\ the\ new\ part\ number\r\n
comment12.params=
comment12.target=double\ getPrice()
comment12.text=\r\n\ Getter\ for\ the\ normal\ price\ of\ a\ BikePart\r\n\ @return\ a\ double,\ the\ price\ of\ the\ part\r\n
comment13.params=price
comment13.target=void\ setPrice(double)
comment13.text=\r\n\ Setter\ for\ normal\ price,\ changes\ the\ price\ to\ the\ given\ double\r\n\ @param\ price\ the\ new\ price\ of\ the\ part\r\n
comment14.params=
comment14.target=double\ getSalesPrice()
comment14.text=\r\n\ Getter\ for\ the\ SalesPrice\ of\ a\ BikePart\r\n\ @return\ a\ double,\ the\ price\ of\ the\ part\ when\ it\ is\ on\ sale\r\n
comment15.params=salesPrice
comment15.target=void\ setSalesPrice(double)
comment15.text=\r\n\ Setter\ for\ the\ SalesPrice\ of\ a\ BikePart\r\n\ @param\ salesPrice\ the\ new\ sales\ price\ we\ want\ to\ set\r\n
comment16.params=
comment16.target=boolean\ getOnSale()
comment16.text=\r\n\ Getter,\ returns\ whether\ a\ bikePart\ is\ onSale\r\n\ @return\ a\ boolean,\ whether\ or\ not\ the\ part\ is\ on\ sale.\r\n
comment17.params=onSale
comment17.target=void\ setOnSale(boolean)
comment17.text=\r\n\ Setter,\ changes\ whether\ a\ bikePart\ is\ onSale\ or\ not\r\n\ @param\ onSale\ true\ or\ false\ depending\ on\ if\ we\ want\ the\ part\ on\ sale.\r\n
comment18.params=
comment18.target=int\ getQuantity()
comment18.text=\r\n\ Getter,\ returns\ the\ quantity\ of\ parts\ in\ the\ system.\r\n\ @return\ an\ int,\ number\ of\ this\ part\ in\ inventory.\r\n
comment19.params=quantity
comment19.target=void\ setQuantity(int)
comment19.text=\r\n\ Setter,\ changes\ the\ quantity\ of\ a\ part\ in\ inventory.\r\n\ @param\ quantity\ new\ quantity\ of\ this\ part\ \r\n
comment2.params=name\ quantity
comment2.target=BikePart(java.lang.String,\ int)
comment2.text=\r\n\ partially\ paramaterized\ constructor\ for\ BikePart\ objects,\ using\ only\ the\ two\ values\ given\ in\ an\ inventory\ transfer\ file\ (name\ and\ quantity\ of\ part),\ \r\n\ sets\ other\ values\ to\ placeholder\ values.\r\n
comment20.params=
comment20.target=void\ quantityUp()
comment20.text=\r\n\ simple\ method\ to\ increment\ quantity\ by\ 1\r\n\ \r\n
comment21.params=
comment21.target=void\ quantityDown()
comment21.text=\r\n\ Simple\ method\ to\ increment\ quantity\ by\ -1\r\n\ \r\n
comment22.params=part1\ part2
comment22.target=void\ overwrite(BikePart,\ BikePart)
comment22.text=\r\n\ method\ used\ to\ overwrite\ a\ BikePart\ with\ data\ from\ a\ second,\ useful\ for\ updating\ an\ inventory\ list\ with\ price/on-sale\ changes.\r\n\ @param\ part1\ the\ BikePart\ being\ overwritten\r\n\ @param\ part2\ the\ BikePart\ updating\ and\ overriding\ part1\r\n
comment3.params=name\ number\ price\ salesPrice\ onSale\ quantity
comment3.target=BikePart(java.lang.String,\ int,\ double,\ double,\ boolean,\ int)
comment3.text=\r\n\ Fully\ paramaterized\ constructor\ for\ a\ BikePart\ object\ where\ all\ variables\ are\ provided\r\n
comment4.params=
comment4.target=java.lang.String\ partInfo()
comment4.text=\r\n\ This\ method\ returns\ all\ information\ about\ a\ BikePart\ object\r\n\ useful\ for\ displaying\ inventories\r\n\ @return\ String\ all\ of\ the\ part's\ details\r\n
comment5.params=
comment5.target=java.lang.String\ partInfoSale()
comment5.text=\r\n\ this\ method\ displays\ the\ relevant\ details\ when\ making\ a\ sale\ of\ an\ item\ that\ IS\ at\ sale\ price\r\n\ @return\ String\ the\ part\ name,\ number,\ sale\ price,\ on-sale\ status,\ and\ quantity\ of\ a\ part\ in\ one\ String\r\n
comment6.params=
comment6.target=java.lang.String\ partInfoNoSale()
comment6.text=\r\n\ this\ method\ displays\ relevant\ sale\ details\ for\ an\ item\ that\ is\ NOT\ at\ sale\ price\r\n\ @return\ String\ the\ part\ name,\ number,\ price,\ on-sale\ status,\ and\ quantity\ of\ a\ part\ in\ one\ String.\r\n
comment7.params=
comment7.target=java.lang.String\ partInfoShort()
comment7.text=\r\n\ a\ shortened\ version\ of\ partInfo(),\ displaying\ only\ the\ name\ and\ quantity\ of\ a\ part.\r\n\ @return\ String\ the\ partName\ and\ quantity\ of\ a\ part\ in\ one\ String.\r\n
comment8.params=
comment8.target=java.lang.String\ getName()
comment8.text=\r\n\ Getter\ method,\ returns\ the\ name\ of\ a\ BikePart\r\n\ @return\ a\ String,\ representing\ the\ part's\ name\r\n
comment9.params=name
comment9.target=void\ setName(java.lang.String)
comment9.text=\r\n\ Setter\ method,\ changes\ the\ name\ of\ a\ BikePart\ to\ the\ given\ string\r\n\ @param\ name\ a\ String\ which\ becomes\ the\ object's\ new\ name\r\n
numComments=23
